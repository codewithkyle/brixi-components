import{djinnjsOutDir as t}from"./config.mjs";import{parse as n}from"./body-parser.mjs";let e=null,o=null,i=null;new class{constructor(){this.init(),document.addEventListener("djinn:use-full",()=>{sessionStorage.setItem("connection-choice","full"),o.collectWebComponents()}),document.addEventListener("djinn:use-lite",()=>{sessionStorage.setItem("connection-choice","lite"),o.collectWebComponents()}),document.addEventListener("djinn:mount-components",this.mountComponents),document.addEventListener("djinn:mount-scripts",t=>{this.mountScripts(t.detail.selectors)}),document.addEventListener("djinn:parse",t=>{this.parseCSS(t.detail.body,t.detail.requestUid)})}async init(){await n(document.documentElement),await this.setup(),await this.finalize(),this.mountComponents()}async finalize(){const n=await import(`${location.origin}/${t}/web-component-manager.mjs`);if(o=new n.WebComponentManager,e.setDOMState("idling"),i=await import(`${location.origin}/${t}/djinn-utils.mjs`),i.scrollOrResetPage(),0!==e.threadPool)await import(`${location.origin}/${t}/service-worker-bootstrap.mjs`);else{const t=new CustomEvent("pjax:init");document.dispatchEvent(t)}}async setup(){const n=await import(`${location.origin}/${t}/env.mjs`);e=n.env}async parseCSS(t,e=null){const o=document.implementation.createHTMLDocument("djinn-temp-document");o.documentElement.innerHTML=t,await n(o.documentElement);const i=new CustomEvent("pjax:continue",{detail:{requestUid:e}});document.dispatchEvent(i)}mountComponents(){o.collectWebComponents()}async mountScripts(t){i.handleInlineScripts(t)}};